/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;

import java.util.ArrayList;
import java.util.List;

/**
 * WhatsappCampTemplate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class WhatsappCampTemplate {
  @SerializedName("name")
  private String name = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("contains_button")
  private Boolean containsButton = null;

  @SerializedName("display_header")
  private Boolean displayHeader = null;

  @SerializedName("header_type")
  private String headerType = null;

  @SerializedName("components")
  private List<ComponentItems> components = null;

  @SerializedName("header_variables")
  private List<VariablesItems> headerVariables = null;

  @SerializedName("body_variables")
  private List<VariablesItems> bodyVariables = null;

  @SerializedName("button_type")
  private String buttonType = null;

  @SerializedName("hide_footer")
  private Boolean hideFooter = null;

  public WhatsappCampTemplate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of the template
   * @return name
  **/
  @ApiModelProperty(example = "wta107", value = "name of the template")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public WhatsappCampTemplate category(String category) {
    this.category = category;
    return this;
  }

   /**
   * description of the template
   * @return category
  **/
  @ApiModelProperty(example = "Marketing", value = "description of the template")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public WhatsappCampTemplate language(String language) {
    this.language = language;
    return this;
  }

   /**
   * language of the template
   * @return language
  **/
  @ApiModelProperty(example = "en_GB", value = "language of the template")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public WhatsappCampTemplate containsButton(Boolean containsButton) {
    this.containsButton = containsButton;
    return this;
  }

   /**
   * Get containsButton
   * @return containsButton
  **/
  @ApiModelProperty(example = "false", value = "")
  public Boolean isContainsButton() {
    return containsButton;
  }

  public void setContainsButton(Boolean containsButton) {
    this.containsButton = containsButton;
  }

  public WhatsappCampTemplate displayHeader(Boolean displayHeader) {
    this.displayHeader = displayHeader;
    return this;
  }

   /**
   * Get displayHeader
   * @return displayHeader
  **/
  @ApiModelProperty(example = "true", value = "")
  public Boolean isDisplayHeader() {
    return displayHeader;
  }

  public void setDisplayHeader(Boolean displayHeader) {
    this.displayHeader = displayHeader;
  }

  public WhatsappCampTemplate headerType(String headerType) {
    this.headerType = headerType;
    return this;
  }

   /**
   * type of header
   * @return headerType
  **/
  @ApiModelProperty(example = "text", value = "type of header")
  public String getHeaderType() {
    return headerType;
  }

  public void setHeaderType(String headerType) {
    this.headerType = headerType;
  }

  public WhatsappCampTemplate components(List<ComponentItems> components) {
    this.components = components;
    return this;
  }

  public WhatsappCampTemplate addComponentsItem(ComponentItems componentsItem) {
    if (this.components == null) {
      this.components = new ArrayList<ComponentItems>();
    }
    this.components.add(componentsItem);
    return this;
  }

   /**
   * array of component item objects
   * @return components
  **/
  @ApiModelProperty(value = "array of component item objects")
  public List<ComponentItems> getComponents() {
    return components;
  }

  public void setComponents(List<ComponentItems> components) {
    this.components = components;
  }

  public WhatsappCampTemplate headerVariables(List<VariablesItems> headerVariables) {
    this.headerVariables = headerVariables;
    return this;
  }

  public WhatsappCampTemplate addHeaderVariablesItem(VariablesItems headerVariablesItem) {
    if (this.headerVariables == null) {
      this.headerVariables = new ArrayList<VariablesItems>();
    }
    this.headerVariables.add(headerVariablesItem);
    return this;
  }

   /**
   * array of variables item object
   * @return headerVariables
  **/
  @ApiModelProperty(value = "array of variables item object")
  public List<VariablesItems> getHeaderVariables() {
    return headerVariables;
  }

  public void setHeaderVariables(List<VariablesItems> headerVariables) {
    this.headerVariables = headerVariables;
  }

  public WhatsappCampTemplate bodyVariables(List<VariablesItems> bodyVariables) {
    this.bodyVariables = bodyVariables;
    return this;
  }

  public WhatsappCampTemplate addBodyVariablesItem(VariablesItems bodyVariablesItem) {
    if (this.bodyVariables == null) {
      this.bodyVariables = new ArrayList<VariablesItems>();
    }
    this.bodyVariables.add(bodyVariablesItem);
    return this;
  }

   /**
   * array of variables item variables
   * @return bodyVariables
  **/
  @ApiModelProperty(value = "array of variables item variables")
  public List<VariablesItems> getBodyVariables() {
    return bodyVariables;
  }

  public void setBodyVariables(List<VariablesItems> bodyVariables) {
    this.bodyVariables = bodyVariables;
  }

  public WhatsappCampTemplate buttonType(String buttonType) {
    this.buttonType = buttonType;
    return this;
  }

   /**
   * Get buttonType
   * @return buttonType
  **/
  @ApiModelProperty(example = "QUICK_REPLIES", value = "")
  public String getButtonType() {
    return buttonType;
  }

  public void setButtonType(String buttonType) {
    this.buttonType = buttonType;
  }

  public WhatsappCampTemplate hideFooter(Boolean hideFooter) {
    this.hideFooter = hideFooter;
    return this;
  }

   /**
   * Get hideFooter
   * @return hideFooter
  **/
  @ApiModelProperty(example = "true", value = "")
  public Boolean isHideFooter() {
    return hideFooter;
  }

  public void setHideFooter(Boolean hideFooter) {
    this.hideFooter = hideFooter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    WhatsappCampTemplate whatsappCampTemplate = (WhatsappCampTemplate) o;
    return ObjectUtils.equals(this.name, whatsappCampTemplate.name) &&
    ObjectUtils.equals(this.category, whatsappCampTemplate.category) &&
    ObjectUtils.equals(this.language, whatsappCampTemplate.language) &&
    ObjectUtils.equals(this.containsButton, whatsappCampTemplate.containsButton) &&
    ObjectUtils.equals(this.displayHeader, whatsappCampTemplate.displayHeader) &&
    ObjectUtils.equals(this.headerType, whatsappCampTemplate.headerType) &&
    ObjectUtils.equals(this.components, whatsappCampTemplate.components) &&
    ObjectUtils.equals(this.headerVariables, whatsappCampTemplate.headerVariables) &&
    ObjectUtils.equals(this.bodyVariables, whatsappCampTemplate.bodyVariables) &&
    ObjectUtils.equals(this.buttonType, whatsappCampTemplate.buttonType) &&
    ObjectUtils.equals(this.hideFooter, whatsappCampTemplate.hideFooter);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(name, category, language, containsButton, displayHeader, headerType, components, headerVariables, bodyVariables, buttonType, hideFooter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WhatsappCampTemplate {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    containsButton: ").append(toIndentedString(containsButton)).append("\n");
    sb.append("    displayHeader: ").append(toIndentedString(displayHeader)).append("\n");
    sb.append("    headerType: ").append(toIndentedString(headerType)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    headerVariables: ").append(toIndentedString(headerVariables)).append("\n");
    sb.append("    bodyVariables: ").append(toIndentedString(bodyVariables)).append("\n");
    sb.append("    buttonType: ").append(toIndentedString(buttonType)).append("\n");
    sb.append("    hideFooter: ").append(toIndentedString(hideFooter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

