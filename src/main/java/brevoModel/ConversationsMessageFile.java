/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;

/**
 * ConversationsMessageFile
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class ConversationsMessageFile {
  @SerializedName("filename")
  private String filename = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("isImage")
  private Boolean isImage = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("imageInfo")
  private ConversationsMessageFileImageInfo imageInfo = null;

  public ConversationsMessageFile filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * Name of the file
   * @return filename
  **/
  @ApiModelProperty(example = "conversations.png", value = "Name of the file")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public ConversationsMessageFile size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Size in bytes
   * minimum: 0
   * @return size
  **/
  @ApiModelProperty(example = "15538", value = "Size in bytes")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public ConversationsMessageFile isImage(Boolean isImage) {
    this.isImage = isImage;
    return this;
  }

   /**
   * Whether the file is an image
   * @return isImage
  **/
  @ApiModelProperty(example = "true", value = "Whether the file is an image")
  public Boolean isIsImage() {
    return isImage;
  }

  public void setIsImage(Boolean isImage) {
    this.isImage = isImage;
  }

  public ConversationsMessageFile url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL of the file
   * @return url
  **/
  @ApiModelProperty(example = "https://ucarecdn.com/cee5c10c-8302-45c1-b1fb-43860ca941a9/", value = "URL of the file")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ConversationsMessageFile imageInfo(ConversationsMessageFileImageInfo imageInfo) {
    this.imageInfo = imageInfo;
    return this;
  }

   /**
   * Get imageInfo
   * @return imageInfo
  **/
  @ApiModelProperty(value = "")
  public ConversationsMessageFileImageInfo getImageInfo() {
    return imageInfo;
  }

  public void setImageInfo(ConversationsMessageFileImageInfo imageInfo) {
    this.imageInfo = imageInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    ConversationsMessageFile conversationsMessageFile = (ConversationsMessageFile) o;
    return ObjectUtils.equals(this.filename, conversationsMessageFile.filename) &&
    ObjectUtils.equals(this.size, conversationsMessageFile.size) &&
    ObjectUtils.equals(this.isImage, conversationsMessageFile.isImage) &&
    ObjectUtils.equals(this.url, conversationsMessageFile.url) &&
    ObjectUtils.equals(this.imageInfo, conversationsMessageFile.imageInfo);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(filename, size, isImage, url, imageInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationsMessageFile {\n");
    
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    isImage: ").append(toIndentedString(isImage)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    imageInfo: ").append(toIndentedString(imageInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

