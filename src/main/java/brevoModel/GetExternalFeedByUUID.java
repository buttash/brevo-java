/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * GetExternalFeedByUUID
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class GetExternalFeedByUUID {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("url")
  private String url = null;

  /**
   * Auth type of the feed: * &#x60;basic&#x60; * &#x60;token&#x60; * &#x60;noAuth&#x60; 
   */
  @JsonAdapter(AuthTypeEnum.Adapter.class)
  public enum AuthTypeEnum {
    BASIC("basic"),
    
    TOKEN("token"),
    
    NOAUTH("noAuth");

    private String value;

    AuthTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthTypeEnum fromValue(String text) {
      for (AuthTypeEnum b : AuthTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authType")
  private AuthTypeEnum authType = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("headers")
  private List<GetExternalFeedByUUIDHeaders> headers = new ArrayList<GetExternalFeedByUUIDHeaders>();

  @SerializedName("maxRetries")
  private Integer maxRetries = null;

  @SerializedName("cache")
  private Boolean cache = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("modifiedAt")
  private OffsetDateTime modifiedAt = null;

  public GetExternalFeedByUUID id(String id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the feed
   * @return id
  **/
  @ApiModelProperty(example = "54377442-20a2-4c20-b761-d636c72de7b7", required = true, value = "ID of the feed")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GetExternalFeedByUUID name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the feed
   * @return name
  **/
  @ApiModelProperty(example = "New feed", required = true, value = "Name of the feed")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GetExternalFeedByUUID url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL of the feed
   * @return url
  **/
  @ApiModelProperty(example = "http://requestb.in/173lyyx1", required = true, value = "URL of the feed")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public GetExternalFeedByUUID authType(AuthTypeEnum authType) {
    this.authType = authType;
    return this;
  }

   /**
   * Auth type of the feed: * &#x60;basic&#x60; * &#x60;token&#x60; * &#x60;noAuth&#x60; 
   * @return authType
  **/
  @ApiModelProperty(required = true, value = "Auth type of the feed: * `basic` * `token` * `noAuth` ")
  public AuthTypeEnum getAuthType() {
    return authType;
  }

  public void setAuthType(AuthTypeEnum authType) {
    this.authType = authType;
  }

  public GetExternalFeedByUUID username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Username for authType &#x60;basic&#x60;
   * @return username
  **/
  @ApiModelProperty(example = "user", value = "Username for authType `basic`")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public GetExternalFeedByUUID password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password for authType &#x60;basic&#x60;
   * @return password
  **/
  @ApiModelProperty(example = "password", value = "Password for authType `basic`")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public GetExternalFeedByUUID token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Token for authType &#x60;token&#x60;
   * @return token
  **/
  @ApiModelProperty(example = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c", value = "Token for authType `token`")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public GetExternalFeedByUUID headers(List<GetExternalFeedByUUIDHeaders> headers) {
    this.headers = headers;
    return this;
  }

  public GetExternalFeedByUUID addHeadersItem(GetExternalFeedByUUIDHeaders headersItem) {
    this.headers.add(headersItem);
    return this;
  }

   /**
   * Custom headers for the feed
   * @return headers
  **/
  @ApiModelProperty(required = true, value = "Custom headers for the feed")
  public List<GetExternalFeedByUUIDHeaders> getHeaders() {
    return headers;
  }

  public void setHeaders(List<GetExternalFeedByUUIDHeaders> headers) {
    this.headers = headers;
  }

  public GetExternalFeedByUUID maxRetries(Integer maxRetries) {
    this.maxRetries = maxRetries;
    return this;
  }

   /**
   * Maximum number of retries on the feed url
   * minimum: 0
   * maximum: 5
   * @return maxRetries
  **/
  @ApiModelProperty(example = "5", required = true, value = "Maximum number of retries on the feed url")
  public Integer getMaxRetries() {
    return maxRetries;
  }

  public void setMaxRetries(Integer maxRetries) {
    this.maxRetries = maxRetries;
  }

  public GetExternalFeedByUUID cache(Boolean cache) {
    this.cache = cache;
    return this;
  }

   /**
   * Toggle caching of feed url response
   * @return cache
  **/
  @ApiModelProperty(example = "true", required = true, value = "Toggle caching of feed url response")
  public Boolean isCache() {
    return cache;
  }

  public void setCache(Boolean cache) {
    this.cache = cache;
  }

  public GetExternalFeedByUUID createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Datetime on which the feed was created
   * @return createdAt
  **/
  @ApiModelProperty(example = "2022-10-06T05:03:47.053000000Z", required = true, value = "Datetime on which the feed was created")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public GetExternalFeedByUUID modifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Datetime on which the feed was modified
   * @return modifiedAt
  **/
  @ApiModelProperty(example = "2022-10-06T05:03:47.053000000Z", required = true, value = "Datetime on which the feed was modified")
  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    GetExternalFeedByUUID getExternalFeedByUUID = (GetExternalFeedByUUID) o;
    return ObjectUtils.equals(this.id, getExternalFeedByUUID.id) &&
    ObjectUtils.equals(this.name, getExternalFeedByUUID.name) &&
    ObjectUtils.equals(this.url, getExternalFeedByUUID.url) &&
    ObjectUtils.equals(this.authType, getExternalFeedByUUID.authType) &&
    ObjectUtils.equals(this.username, getExternalFeedByUUID.username) &&
    ObjectUtils.equals(this.password, getExternalFeedByUUID.password) &&
    ObjectUtils.equals(this.token, getExternalFeedByUUID.token) &&
    ObjectUtils.equals(this.headers, getExternalFeedByUUID.headers) &&
    ObjectUtils.equals(this.maxRetries, getExternalFeedByUUID.maxRetries) &&
    ObjectUtils.equals(this.cache, getExternalFeedByUUID.cache) &&
    ObjectUtils.equals(this.createdAt, getExternalFeedByUUID.createdAt) &&
    ObjectUtils.equals(this.modifiedAt, getExternalFeedByUUID.modifiedAt);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(id, name, url, authType, username, password, token, headers, maxRetries, cache, createdAt, modifiedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetExternalFeedByUUID {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    maxRetries: ").append(toIndentedString(maxRetries)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

