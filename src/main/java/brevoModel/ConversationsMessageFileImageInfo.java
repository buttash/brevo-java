/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;

/**
 * image info is passed in case the file is an image
 */
@ApiModel(description = "image info is passed in case the file is an image")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class ConversationsMessageFileImageInfo {
  @SerializedName("width")
  private Long width = null;

  @SerializedName("height")
  private Long height = null;

  @SerializedName("previewUrl")
  private String previewUrl = null;

  public ConversationsMessageFileImageInfo width(Long width) {
    this.width = width;
    return this;
  }

   /**
   * Width of the image
   * minimum: 0
   * @return width
  **/
  @ApiModelProperty(example = "1129", value = "Width of the image")
  public Long getWidth() {
    return width;
  }

  public void setWidth(Long width) {
    this.width = width;
  }

  public ConversationsMessageFileImageInfo height(Long height) {
    this.height = height;
    return this;
  }

   /**
   * height of the image
   * minimum: 0
   * @return height
  **/
  @ApiModelProperty(example = "525", value = "height of the image")
  public Long getHeight() {
    return height;
  }

  public void setHeight(Long height) {
    this.height = height;
  }

  public ConversationsMessageFileImageInfo previewUrl(String previewUrl) {
    this.previewUrl = previewUrl;
    return this;
  }

   /**
   * URL of the preview
   * @return previewUrl
  **/
  @ApiModelProperty(example = "https://ucarecdn.com/03cd56cd-1de9-4f65-996d-08afdf27fa1b/-/preview/800x800/-/quality/lighter/", value = "URL of the preview")
  public String getPreviewUrl() {
    return previewUrl;
  }

  public void setPreviewUrl(String previewUrl) {
    this.previewUrl = previewUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    ConversationsMessageFileImageInfo conversationsMessageFileImageInfo = (ConversationsMessageFileImageInfo) o;
    return ObjectUtils.equals(this.width, conversationsMessageFileImageInfo.width) &&
    ObjectUtils.equals(this.height, conversationsMessageFileImageInfo.height) &&
    ObjectUtils.equals(this.previewUrl, conversationsMessageFileImageInfo.previewUrl);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(width, height, previewUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationsMessageFileImageInfo {\n");
    
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    previewUrl: ").append(toIndentedString(previewUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

