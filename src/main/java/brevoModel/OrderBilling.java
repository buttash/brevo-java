/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;

/**
 * Billing details of an order.
 */
@ApiModel(description = "Billing details of an order.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class OrderBilling {
  @SerializedName("address")
  private String address = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("postCode")
  private String postCode = null;

  @SerializedName("paymentMethod")
  private String paymentMethod = null;

  @SerializedName("region")
  private String region = null;

  public OrderBilling address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Full billing address.
   * @return address
  **/
  @ApiModelProperty(example = "15 Somewhere Road, Brynmenyn", value = "Full billing address.")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public OrderBilling city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Exact city of the address.
   * @return city
  **/
  @ApiModelProperty(example = "Basel", value = "Exact city of the address.")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public OrderBilling countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Billing country 2-letter ISO code.
   * @return countryCode
  **/
  @ApiModelProperty(example = "CA", value = "Billing country 2-letter ISO code.")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public OrderBilling phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number to contact for further details about the order, Mandatory if \&quot;email\&quot; field is not passed.
   * @return phone
  **/
  @ApiModelProperty(example = "01559 032133", value = "Phone number to contact for further details about the order, Mandatory if \"email\" field is not passed.")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public OrderBilling postCode(String postCode) {
    this.postCode = postCode;
    return this;
  }

   /**
   * Postcode for delivery and billing.
   * @return postCode
  **/
  @ApiModelProperty(example = "4052", value = "Postcode for delivery and billing.")
  public String getPostCode() {
    return postCode;
  }

  public void setPostCode(String postCode) {
    this.postCode = postCode;
  }

  public OrderBilling paymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * How the visitor will pay for the item(s), e.g. paypal, check, etc.
   * @return paymentMethod
  **/
  @ApiModelProperty(example = "PayPal", value = "How the visitor will pay for the item(s), e.g. paypal, check, etc.")
  public String getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public OrderBilling region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Exact region (state/province) for delivery and billing.
   * @return region
  **/
  @ApiModelProperty(example = "Northwestern Switzerland", value = "Exact region (state/province) for delivery and billing.")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    OrderBilling orderBilling = (OrderBilling) o;
    return ObjectUtils.equals(this.address, orderBilling.address) &&
    ObjectUtils.equals(this.city, orderBilling.city) &&
    ObjectUtils.equals(this.countryCode, orderBilling.countryCode) &&
    ObjectUtils.equals(this.phone, orderBilling.phone) &&
    ObjectUtils.equals(this.postCode, orderBilling.postCode) &&
    ObjectUtils.equals(this.paymentMethod, orderBilling.paymentMethod) &&
    ObjectUtils.equals(this.region, orderBilling.region);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(address, city, countryCode, phone, postCode, paymentMethod, region);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderBilling {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

