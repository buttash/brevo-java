/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;

/**
 * ConversionSourceProduct
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class ConversionSourceProduct {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("sku")
  private String sku = null;

  @SerializedName("price")
  private Float price = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("imageUrl")
  private String imageUrl = null;

  @SerializedName("ordersCount")
  private Integer ordersCount = null;

  @SerializedName("revenue")
  private Float revenue = null;

  public ConversionSourceProduct id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "1", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ConversionSourceProduct name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "Milky Way Galaxy", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConversionSourceProduct sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @ApiModelProperty(example = "sku-1", value = "")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public ConversionSourceProduct price(Float price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(example = "1000.0", value = "")
  public Float getPrice() {
    return price;
  }

  public void setPrice(Float price) {
    this.price = price;
  }

  public ConversionSourceProduct url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(example = "https://mydomain.com/products/alpina-panoma-classic", value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ConversionSourceProduct imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @ApiModelProperty(example = "http://mydomain.com/product-absoulte-url/img.jpeg", value = "")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public ConversionSourceProduct ordersCount(Integer ordersCount) {
    this.ordersCount = ordersCount;
    return this;
  }

   /**
   * Get ordersCount
   * @return ordersCount
  **/
  @ApiModelProperty(example = "200", value = "")
  public Integer getOrdersCount() {
    return ordersCount;
  }

  public void setOrdersCount(Integer ordersCount) {
    this.ordersCount = ordersCount;
  }

  public ConversionSourceProduct revenue(Float revenue) {
    this.revenue = revenue;
    return this;
  }

   /**
   * Get revenue
   * @return revenue
  **/
  @ApiModelProperty(example = "999.99", value = "")
  public Float getRevenue() {
    return revenue;
  }

  public void setRevenue(Float revenue) {
    this.revenue = revenue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    ConversionSourceProduct conversionSourceProduct = (ConversionSourceProduct) o;
    return ObjectUtils.equals(this.id, conversionSourceProduct.id) &&
    ObjectUtils.equals(this.name, conversionSourceProduct.name) &&
    ObjectUtils.equals(this.sku, conversionSourceProduct.sku) &&
    ObjectUtils.equals(this.price, conversionSourceProduct.price) &&
    ObjectUtils.equals(this.url, conversionSourceProduct.url) &&
    ObjectUtils.equals(this.imageUrl, conversionSourceProduct.imageUrl) &&
    ObjectUtils.equals(this.ordersCount, conversionSourceProduct.ordersCount) &&
    ObjectUtils.equals(this.revenue, conversionSourceProduct.revenue);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(id, name, sku, price, url, imageUrl, ordersCount, revenue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversionSourceProduct {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    ordersCount: ").append(toIndentedString(ordersCount)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

