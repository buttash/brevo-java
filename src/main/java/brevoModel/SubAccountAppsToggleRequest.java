/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;

/**
 * List of enable/disable applications on the sub-account
 */
@ApiModel(description = "List of enable/disable applications on the sub-account")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class SubAccountAppsToggleRequest {
  @SerializedName("inbox")
  private Boolean inbox = null;

  @SerializedName("whatsapp")
  private Boolean whatsapp = null;

  @SerializedName("automation")
  private Boolean automation = null;

  @SerializedName("email-campaigns")
  private Boolean emailCampaigns = null;

  @SerializedName("sms-campaigns")
  private Boolean smsCampaigns = null;

  @SerializedName("landing-pages")
  private Boolean landingPages = null;

  @SerializedName("transactional-emails")
  private Boolean transactionalEmails = null;

  @SerializedName("transactional-sms")
  private Boolean transactionalSms = null;

  @SerializedName("facebook-ads")
  private Boolean facebookAds = null;

  @SerializedName("web-push")
  private Boolean webPush = null;

  @SerializedName("meetings")
  private Boolean meetings = null;

  @SerializedName("conversations")
  private Boolean conversations = null;

  @SerializedName("crm")
  private Boolean crm = null;

  public SubAccountAppsToggleRequest inbox(Boolean inbox) {
    this.inbox = inbox;
    return this;
  }

   /**
   * Set this field to enable or disable Inbox on the sub-account / Not applicable on ENTv2
   * @return inbox
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Inbox on the sub-account / Not applicable on ENTv2")
  public Boolean isInbox() {
    return inbox;
  }

  public void setInbox(Boolean inbox) {
    this.inbox = inbox;
  }

  public SubAccountAppsToggleRequest whatsapp(Boolean whatsapp) {
    this.whatsapp = whatsapp;
    return this;
  }

   /**
   * Set this field to enable or disable Whatsapp campaigns on the sub-account
   * @return whatsapp
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Whatsapp campaigns on the sub-account")
  public Boolean isWhatsapp() {
    return whatsapp;
  }

  public void setWhatsapp(Boolean whatsapp) {
    this.whatsapp = whatsapp;
  }

  public SubAccountAppsToggleRequest automation(Boolean automation) {
    this.automation = automation;
    return this;
  }

   /**
   * Set this field to enable or disable Automation on the sub-account
   * @return automation
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Automation on the sub-account")
  public Boolean isAutomation() {
    return automation;
  }

  public void setAutomation(Boolean automation) {
    this.automation = automation;
  }

  public SubAccountAppsToggleRequest emailCampaigns(Boolean emailCampaigns) {
    this.emailCampaigns = emailCampaigns;
    return this;
  }

   /**
   * Set this field to enable or disable Email Campaigns on the sub-account
   * @return emailCampaigns
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Email Campaigns on the sub-account")
  public Boolean isEmailCampaigns() {
    return emailCampaigns;
  }

  public void setEmailCampaigns(Boolean emailCampaigns) {
    this.emailCampaigns = emailCampaigns;
  }

  public SubAccountAppsToggleRequest smsCampaigns(Boolean smsCampaigns) {
    this.smsCampaigns = smsCampaigns;
    return this;
  }

   /**
   * Set this field to enable or disable SMS Marketing on the sub-account
   * @return smsCampaigns
  **/
  @ApiModelProperty(value = "Set this field to enable or disable SMS Marketing on the sub-account")
  public Boolean isSmsCampaigns() {
    return smsCampaigns;
  }

  public void setSmsCampaigns(Boolean smsCampaigns) {
    this.smsCampaigns = smsCampaigns;
  }

  public SubAccountAppsToggleRequest landingPages(Boolean landingPages) {
    this.landingPages = landingPages;
    return this;
  }

   /**
   * Set this field to enable or disable Landing pages on the sub-account
   * @return landingPages
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Landing pages on the sub-account")
  public Boolean isLandingPages() {
    return landingPages;
  }

  public void setLandingPages(Boolean landingPages) {
    this.landingPages = landingPages;
  }

  public SubAccountAppsToggleRequest transactionalEmails(Boolean transactionalEmails) {
    this.transactionalEmails = transactionalEmails;
    return this;
  }

   /**
   * Set this field to enable or disable Transactional Email on the sub-account
   * @return transactionalEmails
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Transactional Email on the sub-account")
  public Boolean isTransactionalEmails() {
    return transactionalEmails;
  }

  public void setTransactionalEmails(Boolean transactionalEmails) {
    this.transactionalEmails = transactionalEmails;
  }

  public SubAccountAppsToggleRequest transactionalSms(Boolean transactionalSms) {
    this.transactionalSms = transactionalSms;
    return this;
  }

   /**
   * Set this field to enable or disable Transactional SMS on the sub-account
   * @return transactionalSms
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Transactional SMS on the sub-account")
  public Boolean isTransactionalSms() {
    return transactionalSms;
  }

  public void setTransactionalSms(Boolean transactionalSms) {
    this.transactionalSms = transactionalSms;
  }

  public SubAccountAppsToggleRequest facebookAds(Boolean facebookAds) {
    this.facebookAds = facebookAds;
    return this;
  }

   /**
   * Set this field to enable or disable Facebook ads on the sub-account
   * @return facebookAds
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Facebook ads on the sub-account")
  public Boolean isFacebookAds() {
    return facebookAds;
  }

  public void setFacebookAds(Boolean facebookAds) {
    this.facebookAds = facebookAds;
  }

  public SubAccountAppsToggleRequest webPush(Boolean webPush) {
    this.webPush = webPush;
    return this;
  }

   /**
   * Set this field to enable or disable Web Push on the sub-account
   * @return webPush
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Web Push on the sub-account")
  public Boolean isWebPush() {
    return webPush;
  }

  public void setWebPush(Boolean webPush) {
    this.webPush = webPush;
  }

  public SubAccountAppsToggleRequest meetings(Boolean meetings) {
    this.meetings = meetings;
    return this;
  }

   /**
   * Set this field to enable or disable Meetings on the sub-account
   * @return meetings
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Meetings on the sub-account")
  public Boolean isMeetings() {
    return meetings;
  }

  public void setMeetings(Boolean meetings) {
    this.meetings = meetings;
  }

  public SubAccountAppsToggleRequest conversations(Boolean conversations) {
    this.conversations = conversations;
    return this;
  }

   /**
   * Set this field to enable or disable Conversations on the sub-account
   * @return conversations
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Conversations on the sub-account")
  public Boolean isConversations() {
    return conversations;
  }

  public void setConversations(Boolean conversations) {
    this.conversations = conversations;
  }

  public SubAccountAppsToggleRequest crm(Boolean crm) {
    this.crm = crm;
    return this;
  }

   /**
   * Set this field to enable or disable Sales CRM on the sub-account
   * @return crm
  **/
  @ApiModelProperty(value = "Set this field to enable or disable Sales CRM on the sub-account")
  public Boolean isCrm() {
    return crm;
  }

  public void setCrm(Boolean crm) {
    this.crm = crm;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    SubAccountAppsToggleRequest subAccountAppsToggleRequest = (SubAccountAppsToggleRequest) o;
    return ObjectUtils.equals(this.inbox, subAccountAppsToggleRequest.inbox) &&
    ObjectUtils.equals(this.whatsapp, subAccountAppsToggleRequest.whatsapp) &&
    ObjectUtils.equals(this.automation, subAccountAppsToggleRequest.automation) &&
    ObjectUtils.equals(this.emailCampaigns, subAccountAppsToggleRequest.emailCampaigns) &&
    ObjectUtils.equals(this.smsCampaigns, subAccountAppsToggleRequest.smsCampaigns) &&
    ObjectUtils.equals(this.landingPages, subAccountAppsToggleRequest.landingPages) &&
    ObjectUtils.equals(this.transactionalEmails, subAccountAppsToggleRequest.transactionalEmails) &&
    ObjectUtils.equals(this.transactionalSms, subAccountAppsToggleRequest.transactionalSms) &&
    ObjectUtils.equals(this.facebookAds, subAccountAppsToggleRequest.facebookAds) &&
    ObjectUtils.equals(this.webPush, subAccountAppsToggleRequest.webPush) &&
    ObjectUtils.equals(this.meetings, subAccountAppsToggleRequest.meetings) &&
    ObjectUtils.equals(this.conversations, subAccountAppsToggleRequest.conversations) &&
    ObjectUtils.equals(this.crm, subAccountAppsToggleRequest.crm);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(inbox, whatsapp, automation, emailCampaigns, smsCampaigns, landingPages, transactionalEmails, transactionalSms, facebookAds, webPush, meetings, conversations, crm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubAccountAppsToggleRequest {\n");
    
    sb.append("    inbox: ").append(toIndentedString(inbox)).append("\n");
    sb.append("    whatsapp: ").append(toIndentedString(whatsapp)).append("\n");
    sb.append("    automation: ").append(toIndentedString(automation)).append("\n");
    sb.append("    emailCampaigns: ").append(toIndentedString(emailCampaigns)).append("\n");
    sb.append("    smsCampaigns: ").append(toIndentedString(smsCampaigns)).append("\n");
    sb.append("    landingPages: ").append(toIndentedString(landingPages)).append("\n");
    sb.append("    transactionalEmails: ").append(toIndentedString(transactionalEmails)).append("\n");
    sb.append("    transactionalSms: ").append(toIndentedString(transactionalSms)).append("\n");
    sb.append("    facebookAds: ").append(toIndentedString(facebookAds)).append("\n");
    sb.append("    webPush: ").append(toIndentedString(webPush)).append("\n");
    sb.append("    meetings: ").append(toIndentedString(meetings)).append("\n");
    sb.append("    conversations: ").append(toIndentedString(conversations)).append("\n");
    sb.append("    crm: ").append(toIndentedString(crm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

