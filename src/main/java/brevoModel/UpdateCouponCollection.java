/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;
import org.threeten.bp.OffsetDateTime;

/**
 * UpdateCouponCollection
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class UpdateCouponCollection {
  @SerializedName("defaultCoupon")
  private String defaultCoupon = null;

  @SerializedName("expirationDate")
  private OffsetDateTime expirationDate = null;

  @SerializedName("remainingDaysAlert")
  private Integer remainingDaysAlert = null;

  @SerializedName("remainingCouponsAlert")
  private Integer remainingCouponsAlert = null;

  public UpdateCouponCollection defaultCoupon(String defaultCoupon) {
    this.defaultCoupon = defaultCoupon;
    return this;
  }

   /**
   * A default coupon to be used in case there are no coupons left
   * @return defaultCoupon
  **/
  @ApiModelProperty(example = "10 OFF", value = "A default coupon to be used in case there are no coupons left")
  public String getDefaultCoupon() {
    return defaultCoupon;
  }

  public void setDefaultCoupon(String defaultCoupon) {
    this.defaultCoupon = defaultCoupon;
  }

  public UpdateCouponCollection expirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Specify an expiration date for the coupon collection in RFC3339 format. Use null to remove the expiration date.
   * @return expirationDate
  **/
  @ApiModelProperty(example = "2024-01-01T00:00:00Z", value = "Specify an expiration date for the coupon collection in RFC3339 format. Use null to remove the expiration date.")
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public UpdateCouponCollection remainingDaysAlert(Integer remainingDaysAlert) {
    this.remainingDaysAlert = remainingDaysAlert;
    return this;
  }

   /**
   * Send a notification alert (email) when the remaining days until the expiration date are equal or fall bellow this number. Use null to disable alerts.
   * @return remainingDaysAlert
  **/
  @ApiModelProperty(example = "5", value = "Send a notification alert (email) when the remaining days until the expiration date are equal or fall bellow this number. Use null to disable alerts.")
  public Integer getRemainingDaysAlert() {
    return remainingDaysAlert;
  }

  public void setRemainingDaysAlert(Integer remainingDaysAlert) {
    this.remainingDaysAlert = remainingDaysAlert;
  }

  public UpdateCouponCollection remainingCouponsAlert(Integer remainingCouponsAlert) {
    this.remainingCouponsAlert = remainingCouponsAlert;
    return this;
  }

   /**
   * Send a notification alert (email) when the remaining coupons count is equal or fall bellow this number. Use null to disable alerts.
   * @return remainingCouponsAlert
  **/
  @ApiModelProperty(example = "5", value = "Send a notification alert (email) when the remaining coupons count is equal or fall bellow this number. Use null to disable alerts.")
  public Integer getRemainingCouponsAlert() {
    return remainingCouponsAlert;
  }

  public void setRemainingCouponsAlert(Integer remainingCouponsAlert) {
    this.remainingCouponsAlert = remainingCouponsAlert;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    UpdateCouponCollection updateCouponCollection = (UpdateCouponCollection) o;
    return ObjectUtils.equals(this.defaultCoupon, updateCouponCollection.defaultCoupon) &&
    ObjectUtils.equals(this.expirationDate, updateCouponCollection.expirationDate) &&
    ObjectUtils.equals(this.remainingDaysAlert, updateCouponCollection.remainingDaysAlert) &&
    ObjectUtils.equals(this.remainingCouponsAlert, updateCouponCollection.remainingCouponsAlert);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(defaultCoupon, expirationDate, remainingDaysAlert, remainingCouponsAlert);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateCouponCollection {\n");
    
    sb.append("    defaultCoupon: ").append(toIndentedString(defaultCoupon)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    remainingDaysAlert: ").append(toIndentedString(remainingDaysAlert)).append("\n");
    sb.append("    remainingCouponsAlert: ").append(toIndentedString(remainingCouponsAlert)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

