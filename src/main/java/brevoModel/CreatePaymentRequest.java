/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoModel;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;

/**
 * CreatePaymentRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-17T12:57:43.398+05:30")
public class CreatePaymentRequest {
  @SerializedName("reference")
  private String reference = null;

  @SerializedName("cart")
  private Cart cart = null;

  @SerializedName("contactId")
  private Long contactId = null;

  @SerializedName("notification")
  private Notification notification = null;

  @SerializedName("configuration")
  private ModelConfiguration _configuration = null;

  public CreatePaymentRequest reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Reference of the payment request, it will appear on the payment page. 
   * @return reference
  **/
  @ApiModelProperty(example = "Invoice #INV0001", required = true, value = "Reference of the payment request, it will appear on the payment page. ")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public CreatePaymentRequest cart(Cart cart) {
    this.cart = cart;
    return this;
  }

   /**
   * Get cart
   * @return cart
  **/
  @ApiModelProperty(required = true, value = "")
  public Cart getCart() {
    return cart;
  }

  public void setCart(Cart cart) {
    this.cart = cart;
  }

  public CreatePaymentRequest contactId(Long contactId) {
    this.contactId = contactId;
    return this;
  }

   /**
   * Brevo ID of the contact requested to pay. 
   * @return contactId
  **/
  @ApiModelProperty(example = "43", required = true, value = "Brevo ID of the contact requested to pay. ")
  public Long getContactId() {
    return contactId;
  }

  public void setContactId(Long contactId) {
    this.contactId = contactId;
  }

  public CreatePaymentRequest notification(Notification notification) {
    this.notification = notification;
    return this;
  }

   /**
   * Get notification
   * @return notification
  **/
  @ApiModelProperty(value = "")
  public Notification getNotification() {
    return notification;
  }

  public void setNotification(Notification notification) {
    this.notification = notification;
  }

  public CreatePaymentRequest _configuration(ModelConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

   /**
   * Get _configuration
   * @return _configuration
  **/
  @ApiModelProperty(required = true, value = "")
  public ModelConfiguration getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(ModelConfiguration _configuration) {
    this._configuration = _configuration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    CreatePaymentRequest createPaymentRequest = (CreatePaymentRequest) o;
    return ObjectUtils.equals(this.reference, createPaymentRequest.reference) &&
    ObjectUtils.equals(this.cart, createPaymentRequest.cart) &&
    ObjectUtils.equals(this.contactId, createPaymentRequest.contactId) &&
    ObjectUtils.equals(this.notification, createPaymentRequest.notification) &&
    ObjectUtils.equals(this._configuration, createPaymentRequest._configuration);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(reference, cart, contactId, notification, _configuration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePaymentRequest {\n");
    
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    cart: ").append(toIndentedString(cart)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

