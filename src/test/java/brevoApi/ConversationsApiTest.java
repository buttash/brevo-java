/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoApi;

import brevo.ApiException;
import brevoModel.*;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for ConversationsApi
 */
@Ignore
public class ConversationsApiTest {

    private final ConversationsApi api = new ConversationsApi();

    
    /**
     * Sets agent’s status to online for 2-3 minutes
     *
     * We recommend pinging this endpoint every minute for as long as the agent has to be considered online.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsAgentOnlinePingPostTest() throws ApiException {
        Body15 body = null;
        api.conversationsAgentOnlinePingPost(body);

        // TODO: test validations
    }
    
    /**
     * Delete a message sent by an agent
     *
     * Only agents’ messages can be deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsMessagesIdDeleteTest() throws ApiException {
        String id = null;
        api.conversationsMessagesIdDelete(id);

        // TODO: test validations
    }
    
    /**
     * Get a message
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsMessagesIdGetTest() throws ApiException {
        String id = null;
        ConversationsMessage response = api.conversationsMessagesIdGet(id);

        // TODO: test validations
    }
    
    /**
     * Update a message sent by an agent
     *
     * Only agents’ messages can be edited.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsMessagesIdPutTest() throws ApiException {
        String id = null;
        Body12 body = null;
        ConversationsMessage response = api.conversationsMessagesIdPut(id, body);

        // TODO: test validations
    }
    
    /**
     * Send a message as an agent
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsMessagesPostTest() throws ApiException {
        Body11 body = null;
        ConversationsMessage response = api.conversationsMessagesPost(body);

        // TODO: test validations
    }
    
    /**
     * Delete an automated message
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsPushedMessagesIdDeleteTest() throws ApiException {
        String id = null;
        api.conversationsPushedMessagesIdDelete(id);

        // TODO: test validations
    }
    
    /**
     * Get an automated message
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsPushedMessagesIdGetTest() throws ApiException {
        String id = null;
        ConversationsMessage response = api.conversationsPushedMessagesIdGet(id);

        // TODO: test validations
    }
    
    /**
     * Update an automated message
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsPushedMessagesIdPutTest() throws ApiException {
        String id = null;
        Body14 body = null;
        ConversationsMessage response = api.conversationsPushedMessagesIdPut(id, body);

        // TODO: test validations
    }
    
    /**
     * Send an automated message to a visitor
     *
     * Example of automated messages: order status, announce new features in your web app, etc.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void conversationsPushedMessagesPostTest() throws ApiException {
        Body13 body = null;
        ConversationsMessage response = api.conversationsPushedMessagesPost(body);

        // TODO: test validations
    }
    
}
