/*
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package brevoApi;

import brevo.ApiException;
import brevoModel.*;
import org.junit.Ignore;
import org.junit.Test;

import java.util.List;

/**
 * API tests for MasterAccountApi
 */
@Ignore
public class MasterAccountApiTest {

    private final MasterAccountApi api = new MasterAccountApi();

    
    /**
     * Delete a group
     *
     * This endpoint allows you to delete a group of sub-organizations. When a group is deleted, the sub-organizations are no longer part of this group. The users associated with the group are no longer associated with the group once deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateGroupIdDeleteTest() throws ApiException {
        String id = null;
        api.corporateGroupIdDelete(id);

        // TODO: test validations
    }
    
    /**
     * GET a group details
     *
     * This endpoint allows you to retrieve a specific groupâ€™s information such as the list of sub-organizations and the user associated with the group.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateGroupIdGetTest() throws ApiException {
        String id = null;
        CorporateGroupDetailsResponse response = api.corporateGroupIdGet(id);

        // TODO: test validations
    }
    
    /**
     * Update a group of sub-accounts
     *
     * This endpoint allows you to update a group of sub-accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateGroupIdPutTest() throws ApiException {
        String id = null;
        Body1 body = null;
        api.corporateGroupIdPut(id, body);

        // TODO: test validations
    }
    
    /**
     * Create a new group of sub-accounts
     *
     * This endpoint allows to create a group of sub-accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateGroupPostTest() throws ApiException {
        Body body = null;
        InlineResponse201 response = api.corporateGroupPost(body);

        // TODO: test validations
    }
    
    /**
     * Delete sub-account from group
     *
     * This endpoint allows you to remove a sub-organization from a group.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateGroupUnlinkGroupIdSubAccountsPutTest() throws ApiException {
        String groupId = null;
        Body2 body = null;
        api.corporateGroupUnlinkGroupIdSubAccountsPut(groupId, body);

        // TODO: test validations
    }
    
    /**
     * Get the details of requested master account
     *
     * This endpoint will provide the details of the master account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateMasterAccountGetTest() throws ApiException {
        MasterDetailsResponse response = api.corporateMasterAccountGet();

        // TODO: test validations
    }
    
    /**
     * Generate SSO token to access admin account
     *
     * This endpoint generates an SSO token to authenticate and access the admin account using the endpoint https://account-app.brevo.com/account/login/corporate/sso/[token], where [token] will be replaced by the actual token.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSsoTokenPostTest() throws ApiException {
        SsoTokenRequestCorporate ssoTokenRequestCorporate = null;
        GetSsoToken response = api.corporateSsoTokenPost(ssoTokenRequestCorporate);

        // TODO: test validations
    }
    
    /**
     * Get the list of all the sub-accounts of the master account.
     *
     * This endpoint will provide the list all the sub-accounts of the master account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSubAccountGetTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        SubAccountsResponse response = api.corporateSubAccountGet(offset, limit);

        // TODO: test validations
    }
    
    /**
     * Enable/disable sub-account application(s)
     *
     * API endpoint for the Corporate owner to enable/disable applications on the sub-account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSubAccountIdApplicationsTogglePutTest() throws ApiException {
        Long id = null;
        SubAccountAppsToggleRequest toggleApplications = null;
        api.corporateSubAccountIdApplicationsTogglePut(id, toggleApplications);

        // TODO: test validations
    }
    
    /**
     * Delete a sub-account
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSubAccountIdDeleteTest() throws ApiException {
        Long id = null;
        api.corporateSubAccountIdDelete(id);

        // TODO: test validations
    }
    
    /**
     * Get sub-account details
     *
     * This endpoint will provide the details for the specified sub-account company
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSubAccountIdGetTest() throws ApiException {
        Long id = null;
        SubAccountDetailsResponse response = api.corporateSubAccountIdGet(id);

        // TODO: test validations
    }
    
    /**
     * Update sub-account plan
     *
     * This endpoint will update the sub-account plan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSubAccountIdPlanPutTest() throws ApiException {
        Long id = null;
        SubAccountUpdatePlanRequest updatePlanDetails = null;
        api.corporateSubAccountIdPlanPut(id, updatePlanDetails);

        // TODO: test validations
    }
    
    /**
     * Create an API key for a sub-account
     *
     * This endpoint will generate an API v3 key for a sub account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSubAccountKeyPostTest() throws ApiException {
        CreateApiKeyRequest createApiKeyRequest = null;
        CreateApiKeyResponse response = api.corporateSubAccountKeyPost(createApiKeyRequest);

        // TODO: test validations
    }
    
    /**
     * Create a new sub-account under a master account.
     *
     * This endpoint will create a new sub-account under a master account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSubAccountPostTest() throws ApiException {
        CreateSubAccount subAccountCreate = null;
        CreateSubAccountResponse response = api.corporateSubAccountPost(subAccountCreate);

        // TODO: test validations
    }
    
    /**
     * Generate SSO token to access sub-account
     *
     * This endpoint generates an sso token to authenticate and access a sub-account of the master using the account endpoint https://account-app.brevo.com/account/login/sub-account/sso/[token], where [token] will be replaced by the actual token.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateSubAccountSsoTokenPostTest() throws ApiException {
        SsoTokenRequest ssoTokenRequest = null;
        GetSsoToken response = api.corporateSubAccountSsoTokenPost(ssoTokenRequest);

        // TODO: test validations
    }
    
    /**
     * Resend / cancel admin user invitation
     *
     * This endpoint will allow the user to:  - Resend an admin user invitation - Cancel an admin user invitation 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateUserInvitationActionEmailPutTest() throws ApiException {
        String action = null;
        String email = null;
        InlineResponse200 response = api.corporateUserInvitationActionEmailPut(action, email);

        // TODO: test validations
    }
    
    /**
     * Revoke an admin user
     *
     * This endpoint allows to revoke/remove an invited member of your Admin account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void corporateUserRevokeEmailDeleteTest() throws ApiException {
        String email = null;
        api.corporateUserRevokeEmailDelete(email);

        // TODO: test validations
    }
    
    /**
     * Get user activity logs
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccountActivityTest() throws ApiException {
        String startDate = null;
        String endDate = null;
        Long limit = null;
        Long offset = null;
        GetAccountActivity response = api.getAccountActivity(startDate, endDate, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Get the list of all admin users
     *
     * This endpoint allows you to list all Admin users of your Admin account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporateInvitedUsersListTest() throws ApiException {
        GetCorporateInvitedUsersList response = api.getCorporateInvitedUsersList();

        // TODO: test validations
    }
    
    /**
     * Check admin user permissions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporateUserPermissionTest() throws ApiException {
        String email = null;
        GetCorporateUserPermission response = api.getCorporateUserPermission(email);

        // TODO: test validations
    }
    
    /**
     * Get the list of groups
     *
     * This endpoint allows you to list all groups created on your Admin account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubAccountGroupsTest() throws ApiException {
        List<InlineResponse2001> response = api.getSubAccountGroups();

        // TODO: test validations
    }
    
    /**
     * Send invitation to an admin user
     *
     * &#x60;This endpoint allows you to invite a member to manage the Admin account  Features and their respective permissions are as below:  - &#x60;my_plan&#x60;:   - \&quot;all\&quot; - &#x60;api&#x60;:   - \&quot;none\&quot; - &#x60;user_management&#x60;:   - \&quot;all\&quot; - &#x60;app_management&#x60; | Not available in ENTv2:   - \&quot;all\&quot;  **Note**: - If &#x60;all_features_access: false&#x60; then only privileges are required otherwise if &#x60;true&#x60; then it&#39;s assumed that all permissions will be there for the invited admin user. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void inviteAdminUserTest() throws ApiException {
        InviteAdminUser sendInvitation = null;
        InviteAdminUser response = api.inviteAdminUser(sendInvitation);

        // TODO: test validations
    }
    
}
